<div class="card">
	<div class="card-body">
		<SearchProductInventoriesComponent OnInventorySelected="HandleInventorySelected"></SearchProductInventoriesComponent>
		@if (this.product is not null &&
							this.product.ProductInventories is not null &&
							this.product.ProductInventories.Count > 0
						){
			<table class="table">
				<thead>
					<tr>
						<th>Name</th>
						<th>Quantity</th>
						<th></th>
					</tr>
				</thead>

				<tbody>
					@foreach(var prodInventory in this.product.ProductInventories){
						<tr>
							<td>
								@prodInventory.Inventory?.InventoryName
							</td>
							<td>
								<input type="number" min="0" @bind-value="prodInventory.InventoryQuantity"/>
							</td>
							<td>
								<button type="button"class="btn btn-link" @onclick="() => RemoveInventory(prodInventory)">Remove</button>
							</td>
						</tr>
					}
				</tbody>
			</table>
		}
	</div>
</div>
@code {
	[Parameter]
	public Product? product { get; set; }

	private void RemoveInventory(ProductInventory productInventory){
		this.product?.RemoveInventory(productInventory);
	}

	private void HandleInventorySelected(Inventory inventory){
		this.product?.AddInventory(inventory);
	}
}
